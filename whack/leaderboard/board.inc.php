<?php
/**
 * Created by PhpStorm.
 * User: michael
 * Date: 12/22/16
 * Time: 12:08 AM
 */
namespace whack\leaderboard;
use whack\data\Account;
use whack\data\WhackDB;
use \PDO;

$pdo = WhackDB::getInstance()->getPDO();

/**
 * Registers a new entry into the Score table. The score table has the
 * Account_id of the user, the Phrase_id of the phrase, the user's wpm and the
 * user's accuracy.
 *
 * @param int $Phrase_id
 * @param string $identifier - the identifier generated by Account::genCookie
 * @param float $wpm
 * @param float $accuracy
 * @return bool - if the insertion was successful
 */
function reg_score( int $Phrase_id, string $identifier, float $wpm,
                    float $accuracy) : bool
{
    global $pdo;

    if ( $identifier !== "" && !Account::verifyCookie($identifier) )
    {
        // the user was authenticated correctly
        return false;
    }

    $id = (int)(explode(':', $identifier)[0]);
    # if we remove the previous score
    if ( remove_prev($id, $Phrase_id, $wpm) )
    {
        $insert = "INSERT INTO 
               whack.Score(Phrase_id, Account_id, wpm, accuracy) 
               VALUES (:phrase, :user, :wpm, :acc)";
        $insert_stmt = $pdo->prepare($insert);
        return $insert_stmt->execute([
            ":wpm" => $wpm,
            ":acc" => $accuracy,
            ":user" => $id,
            ":phrase" => $Phrase_id
        ]);
    }
    else
    {
        return false;
    }
}

/**
 * Remove the existing user score if the wpm is higher
 * @param int $uid
 * @param int $pid - the phrase's id
 * @param float $wpm
 *
 * @return bool - whether the score is greater than previous or previous doesn't
 *                exist
 */
function remove_prev ( int $uid, int $pid, float $wpm ): bool
{
    global $pdo;
    $find_user = $pdo->prepare(
        "SELECT wpm FROM whack.Score 
         WHERE Account_id = :uid AND Phrase_id = :pid"
    );
    $find_user->execute([':uid' => $uid, ':pid' => $pid]);
    $user_score = $find_user->fetch(PDO::FETCH_ASSOC);

    if ( $user_score !== null )
    {
        if ( $user_score['wpm'] < $wpm )
        {
            $delete_score = $pdo->prepare(
                "DELETE FROM whack.Score 
             WHERE Account_id = :uid AND Phrase_id = :pid"
            );
            return $delete_score->execute([":uid" => $uid, ":pid" => $pid]);
        }
        else
        {
            # the stored wpm is greater than the current wpm, so don't remove it
            return false;
        }
    }
    else
    {
        # previous entry doesn't exist, so register it as removed
        return true;
    }
}

/**
 * Loads every user who has a score with the phrase.
 * @param int $Phrase_id
 * @return array - all the scores of the leaderboard
 */
function load_leaders (int $Phrase_id) : array
{
    global $pdo;
    $scores = "SELECT * FROM whack.Score WHERE Phrase_id = :Phrase_id";
    $nicks = "SELECT nick FROM whack.Account WHERE id = :id";
    $score_stmt = $pdo->prepare($scores);
    $nick_stmt = $pdo->prepare($nicks);
    $score_stmt->execute([
        ":Phrase_id" => $Phrase_id
    ]);
    $board = $score_stmt->fetchAll(PDO::FETCH_ASSOC);

    // iterate through the $board array and attach each user's nickname
    for ( $i = 0; $i < count($board); $i++)
    {
        $nick_stmt->execute([
            ':id' => $board[$i]['Account_id']
        ]);
        $board[$i]['user'] = $nick_stmt->fetch(PDO::FETCH_ASSOC)['nick'];
    }

    return $board;
}

function finish ()
{
    global $pdo;
    WhackDB::getInstance()->freePDO($pdo);
}